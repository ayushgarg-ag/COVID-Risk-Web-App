{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _react = require(\"react\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar isDeepEquals = function isDeepEquals(toCompare, reference) {\n  return _lodash.default.isEqual(toCompare, reference);\n};\n\nvar useDeepCompareMemo = function useDeepCompareMemo(dependencies) {\n  var ref = (0, _react.useRef)(null);\n\n  if (isDeepEquals(dependencies, ref.current)) {\n    ref.current = dependencies;\n  }\n\n  return ref.current;\n}; // this function compares deeply new dependencies with old one\n// It works like useEffect but we are using isEqual from lodash to compares deeply\n\n\nvar useDeepCompareEffect = function useDeepCompareEffect(callback, dependencies) {\n  (0, _react.useEffect)(callback, useDeepCompareMemo(dependencies));\n};\n\nvar _default = useDeepCompareEffect;\nexports.default = _default;","map":{"version":3,"sources":["/Users/ayushgarg/COMPUTER SCIENCE/MUSER Covid Research/COVID-Risk-Web-App/node_modules/react-gauge-chart/dist/GaugeChart/customHooks.js"],"names":["Object","defineProperty","exports","value","default","_lodash","_interopRequireDefault","require","_react","obj","__esModule","isDeepEquals","toCompare","reference","isEqual","useDeepCompareMemo","dependencies","ref","useRef","current","useDeepCompareEffect","callback","useEffect","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACC,OAAO,CAAC,QAAD,CAAR,CAApC;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,OAAD,CAApB;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEL,IAAAA,OAAO,EAAEK;AAAX,GAArC;AAAwD;;AAE/F,IAAIE,YAAY,GAAG,SAASA,YAAT,CAAsBC,SAAtB,EAAiCC,SAAjC,EAA4C;AAC7D,SAAOR,OAAO,CAACD,OAAR,CAAgBU,OAAhB,CAAwBF,SAAxB,EAAmCC,SAAnC,CAAP;AACD,CAFD;;AAIA,IAAIE,kBAAkB,GAAG,SAASA,kBAAT,CAA4BC,YAA5B,EAA0C;AACjE,MAAIC,GAAG,GAAG,CAAC,GAAGT,MAAM,CAACU,MAAX,EAAmB,IAAnB,CAAV;;AAEA,MAAIP,YAAY,CAACK,YAAD,EAAeC,GAAG,CAACE,OAAnB,CAAhB,EAA6C;AAC3CF,IAAAA,GAAG,CAACE,OAAJ,GAAcH,YAAd;AACD;;AAED,SAAOC,GAAG,CAACE,OAAX;AACD,CARD,C,CAQG;AACH;;;AAGA,IAAIC,oBAAoB,GAAG,SAASA,oBAAT,CAA8BC,QAA9B,EAAwCL,YAAxC,EAAsD;AAC/E,GAAC,GAAGR,MAAM,CAACc,SAAX,EAAsBD,QAAtB,EAAgCN,kBAAkB,CAACC,YAAD,CAAlD;AACD,CAFD;;AAIA,IAAIO,QAAQ,GAAGH,oBAAf;AACAlB,OAAO,CAACE,OAAR,GAAkBmB,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _react = require(\"react\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar isDeepEquals = function isDeepEquals(toCompare, reference) {\n  return _lodash.default.isEqual(toCompare, reference);\n};\n\nvar useDeepCompareMemo = function useDeepCompareMemo(dependencies) {\n  var ref = (0, _react.useRef)(null);\n\n  if (isDeepEquals(dependencies, ref.current)) {\n    ref.current = dependencies;\n  }\n\n  return ref.current;\n}; // this function compares deeply new dependencies with old one\n// It works like useEffect but we are using isEqual from lodash to compares deeply\n\n\nvar useDeepCompareEffect = function useDeepCompareEffect(callback, dependencies) {\n  (0, _react.useEffect)(callback, useDeepCompareMemo(dependencies));\n};\n\nvar _default = useDeepCompareEffect;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}