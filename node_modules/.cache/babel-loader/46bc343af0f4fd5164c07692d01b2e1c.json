{"ast":null,"code":"var _jsxFileName = \"/Users/ayushgarg/VSCodeProjects/COVID-Risk-Web-App/src/components/Results.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Results.css';\nimport { useInterval } from \"./useInterval\";\n\nfunction Results() {\n  const [loading, setLoading] = useState(true);\n  const [percentFaculty, setPercentFaculty] = useState(0.68);\n  const [percentStudent, setPercentStudent] = useState(0.83);\n  const [probFaculty5, setProbFaculty5] = useState(0.01);\n  const [probFaculty25, setProbFaculty25] = useState(0.06);\n  const [probFaculty50, setProbFaculty50] = useState(0.18);\n  const [probFaculty75, setProbFaculty75] = useState(0.54);\n  const [probFaculty95, setProbFaculty95] = useState(2.81);\n  const [probStudent5, setProbStudent5] = useState(0.04);\n  const [probStudent25, setProbStudent25] = useState(0.14);\n  const [probStudent50, setProbStudent50] = useState(0.34);\n  const [probStudent75, setProbStudent75] = useState(0.82);\n  const [probStudent95, setProbStudent95] = useState(3.17);\n  const [facultyInfectious, setFacultyInfectious] = useState(.1);\n  const [studentInfectious, setStudentInfectious] = useState(.1);\n\n  const parseValue = value => {\n    return parseFloat(value).toFixed(2);\n  }; // const [result, setResult] = useState({});\n  // useInterval(async () => {\n  //     console.log(\"Checking if new data has arrived\");\n  //     const response = await fetch('/api/classroombasic', {\n  //         method: 'GET',\n  //         headers: {\n  //             'Content-Type': 'application/json'\n  //         },\n  //     });\n  //     var res = await response.json();\n  //     setResult(res);\n  //     loadData(res);\n  // }, 1000);\n  // const loadData = async (result) => {\n  //     setLoading(true);\n  //     console.log(result);\n  //     setPercentFaculty(parseValue(result.percentFaculty));\n  //     setPercentStudent(parseValue(result.percentStudent));\n  //     setProbFaculty5(parseValue(result.probFaculty5));\n  //     setProbFaculty25(parseValue(result.probFaculty25));\n  //     setProbFaculty50(parseValue(result.probFaculty50));\n  //     setProbFaculty75(parseValue(result.probFaculty75));\n  //     setProbFaculty95(parseValue(result.probFaculty95));\n  //     setProbStudent5(parseValue(result.probStudent5));\n  //     setProbStudent25(parseValue(result.probStudent25));\n  //     setProbStudent50(parseValue(result.probStudent50));\n  //     setProbStudent75(parseValue(result.probStudent75));\n  //     setProbStudent95(parseValue(result.probStudent95));\n  //     setLoading(false);\n  // };\n\n\n  useEffect(() => {\n    const loadData = async () => {\n      const response = await fetch('/api/classroombasic', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      var result = await response.json();\n      console.log(result);\n      setPercentFaculty(parseValue(result.percentFaculty));\n      setPercentStudent(parseValue(result.percentStudent));\n      setProbFaculty5(parseValue(result.probFaculty5));\n      setProbFaculty25(parseValue(result.probFaculty25));\n      setProbFaculty50(parseValue(result.probFaculty50));\n      setProbFaculty75(parseValue(result.probFaculty75));\n      setProbFaculty95(parseValue(result.probFaculty95));\n      setProbStudent5(parseValue(result.probStudent5));\n      setProbStudent25(parseValue(result.probStudent25));\n      setProbStudent50(parseValue(result.probStudent50));\n      setProbStudent75(parseValue(result.probStudent75));\n      setProbStudent95(parseValue(result.probStudent95));\n      setFacultyInfectious(parseFloat(result.facultyInfectious).toFixed(3));\n      setStudentInfectious(parseFloat(result.studentInfectious).toFixed(3)); // return parseFloat(value).toFixed(2);\n\n      setLoading(false);\n    };\n\n    loadData();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, \"LOADING...\");\n  } else {\n    return /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"infobar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"best-estimate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, percentFaculty, \"%\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"infobox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"info-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    }, \"FACULTY\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"info-p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }\n    }, \"The chance of a faculty member being infected is \", /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"estimate-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 100\n      }\n    }, \"VERY LOW\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"info-p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 51\n      }\n    }, \"However,\"), \" this does \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 87\n      }\n    }, \"NOT\"), \" mean infection is impossible. Please continue to adhere to COVID-19 precaution guidelines.\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"faculty-infectious\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }\n    }, \"The faculty infectious rate in the specified community is \", /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"orange-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 121\n      }\n    }, facultyInfectious, \"%\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"breakdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"breakdown-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }, \"STATISTICAL BREAKDOWN\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, \"While our best estimate for the infection probability is \", /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"estimate-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 85\n      }\n    }, percentFaculty, \"%,\"), \" please note that this is still an approximation. However...\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"confidence-p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, \"We are \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 60\n      }\n    }, \"95%\"), \" confident that the infection probability is at least less than \", /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"orange-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 144\n      }\n    }, probFaculty95, \"%\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"confidence-p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 53\n      }\n    }, \"75%\"), \" confident: less than \", /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"orange-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 95\n      }\n    }, probFaculty75, \"%\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"confidence-p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 53\n      }\n    }, \"50%\"), \" confident: less than \", /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"orange-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 95\n      }\n    }, probFaculty50, \"%\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"confidence-p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 53\n      }\n    }, \"25%\"), \" confident: less than \", /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"orange-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 95\n      }\n    }, probFaculty25, \"%\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"confidence-p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 53\n      }\n    }, \" 5%\"), \" confident: less than \", /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"orange-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 95\n      }\n    }, probFaculty5, \"%\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"infobar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"best-estimate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, percentStudent, \"%\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"infobox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"info-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, \"STUDENTS\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"info-p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 29\n      }\n    }, \"The chance of a student being infected is \", /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"estimate-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 93\n      }\n    }, \"VERY LOW\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"info-p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 51\n      }\n    }, \"However,\"), \" this does \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 87\n      }\n    }, \"NOT\"), \" mean infection is impossible. Please continue to adhere to COVID-19 precaution guidelines.\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"student-infectious\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    }, \"The student infectious rate in the specified community is \", /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"orange-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 121\n      }\n    }, studentInfectious, \"%\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"breakdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"breakdown-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }, \"STATISTICAL BREAKDOWN\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, \"While our best estimate for the infection probability is \", /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"estimate-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 85\n      }\n    }, percentStudent, \"%,\"), \" please note that this is still an approximation. However...\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"confidence-p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, \"We are \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 60\n      }\n    }, \"95%\"), \" confident that the infection probability is at least less than \", /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"orange-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 144\n      }\n    }, probStudent95, \"%\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"confidence-p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 53\n      }\n    }, \"75%\"), \" confident: less than \", /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"orange-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 95\n      }\n    }, probStudent75, \"%\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"confidence-p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 53\n      }\n    }, \"50%\"), \" confident: less than \", /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"orange-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 95\n      }\n    }, probStudent50, \"%\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"confidence-p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 53\n      }\n    }, \"25%\"), \" confident: less than \", /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"orange-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 95\n      }\n    }, probStudent25, \"%\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"confidence-p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 53\n      }\n    }, \" 5%\"), \" confident: less than \", /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"orange-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 95\n      }\n    }, probStudent5, \"%\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }))));\n  }\n}\n\nexport default Results;","map":{"version":3,"sources":["/Users/ayushgarg/VSCodeProjects/COVID-Risk-Web-App/src/components/Results.js"],"names":["React","useState","useEffect","useInterval","Results","loading","setLoading","percentFaculty","setPercentFaculty","percentStudent","setPercentStudent","probFaculty5","setProbFaculty5","probFaculty25","setProbFaculty25","probFaculty50","setProbFaculty50","probFaculty75","setProbFaculty75","probFaculty95","setProbFaculty95","probStudent5","setProbStudent5","probStudent25","setProbStudent25","probStudent50","setProbStudent50","probStudent75","setProbStudent75","probStudent95","setProbStudent95","facultyInfectious","setFacultyInfectious","studentInfectious","setStudentInfectious","parseValue","value","parseFloat","toFixed","loadData","response","fetch","method","headers","result","json","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Results.css';\nimport { useInterval } from \"./useInterval\";\n\n\nfunction Results(){\n    const [loading, setLoading] = useState(true);\n    const [percentFaculty, setPercentFaculty] = useState(0.68);\n    const [percentStudent, setPercentStudent] = useState(0.83);\n    const [probFaculty5, setProbFaculty5] = useState(0.01);\n    const [probFaculty25, setProbFaculty25] = useState(0.06);\n    const [probFaculty50, setProbFaculty50] = useState(0.18);\n    const [probFaculty75, setProbFaculty75] = useState(0.54);\n    const [probFaculty95, setProbFaculty95] = useState(2.81);\n    const [probStudent5, setProbStudent5] = useState(0.04);\n    const [probStudent25, setProbStudent25] = useState(0.14);\n    const [probStudent50, setProbStudent50] = useState(0.34);\n    const [probStudent75, setProbStudent75] = useState(0.82);\n    const [probStudent95, setProbStudent95] = useState(3.17);\n    const [facultyInfectious, setFacultyInfectious] = useState(.1);\n    const [studentInfectious, setStudentInfectious] = useState(.1);\n\n    const parseValue = (value) => {\n        return parseFloat(value).toFixed(2);\n    }\n\n    // const [result, setResult] = useState({});\n\n    // useInterval(async () => {\n    //     console.log(\"Checking if new data has arrived\");\n    //     const response = await fetch('/api/classroombasic', {\n    //         method: 'GET',\n    //         headers: {\n    //             'Content-Type': 'application/json'\n    //         },\n    //     });\n    //     var res = await response.json();\n    //     setResult(res);\n    //     loadData(res);\n    // }, 1000);\n\n    // const loadData = async (result) => {\n    //     setLoading(true);\n\n    //     console.log(result);\n\n    //     setPercentFaculty(parseValue(result.percentFaculty));\n    //     setPercentStudent(parseValue(result.percentStudent));\n    //     setProbFaculty5(parseValue(result.probFaculty5));\n    //     setProbFaculty25(parseValue(result.probFaculty25));\n    //     setProbFaculty50(parseValue(result.probFaculty50));\n    //     setProbFaculty75(parseValue(result.probFaculty75));\n    //     setProbFaculty95(parseValue(result.probFaculty95));\n    //     setProbStudent5(parseValue(result.probStudent5));\n    //     setProbStudent25(parseValue(result.probStudent25));\n    //     setProbStudent50(parseValue(result.probStudent50));\n    //     setProbStudent75(parseValue(result.probStudent75));\n    //     setProbStudent95(parseValue(result.probStudent95));\n\n    //     setLoading(false);\n    // };\n\n\n    useEffect(() => {\n        const loadData = async () => {\n            const response = await fetch('/api/classroombasic', {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n            var result = await response.json();\n            console.log(result);\n\n            setPercentFaculty(parseValue(result.percentFaculty));\n            setPercentStudent(parseValue(result.percentStudent));\n            setProbFaculty5(parseValue(result.probFaculty5));\n            setProbFaculty25(parseValue(result.probFaculty25));\n            setProbFaculty50(parseValue(result.probFaculty50));\n            setProbFaculty75(parseValue(result.probFaculty75));\n            setProbFaculty95(parseValue(result.probFaculty95));\n            setProbStudent5(parseValue(result.probStudent5));\n            setProbStudent25(parseValue(result.probStudent25));\n            setProbStudent50(parseValue(result.probStudent50));\n            setProbStudent75(parseValue(result.probStudent75));\n            setProbStudent95(parseValue(result.probStudent95));\n            setFacultyInfectious(parseFloat(result.facultyInfectious).toFixed(3));\n            setStudentInfectious(parseFloat(result.studentInfectious).toFixed(3));\n\n            // return parseFloat(value).toFixed(2);\n\n            setLoading(false);\n        };\n        loadData();\n    }, []);\n\n    if (loading) {\n        return(\n            <div>LOADING...</div>\n        )\n    }\n    else {\n        return(\n            \n            <nav className=\"results\">\n                <div className=\"info-container\">\n                    <div className=\"infobar\">\n                        <h1 className=\"best-estimate\">{percentFaculty}%</h1>\n                        <div className=\"infobox\">\n                            <h1 className=\"info-title\">FACULTY</h1>\n                            <p className=\"info-p\">The chance of a faculty member being infected is <strong className=\"estimate-text\">VERY LOW</strong></p>\n                            <p className=\"info-p\"><strong>However,</strong> this does <strong>NOT</strong> mean infection is impossible. Please continue to adhere to COVID-19 precaution guidelines.</p>\n                            <p className=\"faculty-infectious\">The faculty infectious rate in the specified community is <strong className=\"orange-text\">{facultyInfectious}%</strong></p>\n                        </div>\n                    </div>\n                    <div className=\"breakdown\">\n                        <h1 className=\"breakdown-title\">STATISTICAL BREAKDOWN</h1>\n                        <p>While our best estimate for the infection probability is <strong className=\"estimate-text\">{percentFaculty}%,</strong> please note that this is still an approximation. However...</p>\n                        <p className=\"confidence-p\">We are <strong>95%</strong> confident that the infection probability is at least less than <strong className=\"orange-text\">{probFaculty95}%</strong></p>\n                        <p className=\"confidence-p\"><strong>75%</strong> confident: less than <strong className=\"orange-text\">{probFaculty75}%</strong></p>\n                        <p className=\"confidence-p\"><strong>50%</strong> confident: less than <strong className=\"orange-text\">{probFaculty50}%</strong></p>\n                        <p className=\"confidence-p\"><strong>25%</strong> confident: less than <strong className=\"orange-text\">{probFaculty25}%</strong></p>\n                        <p className=\"confidence-p\"><strong> 5%</strong> confident: less than <strong className=\"orange-text\">{probFaculty5}%</strong></p>\n                        <br></br>\n                    </div>\n                </div>\n\n                <div className=\"info-container\">\n                    <div className=\"infobar\">\n                        <h1 className=\"best-estimate\">{percentStudent}%</h1>\n                        <div className=\"infobox\">\n                            <h1 className=\"info-title\">STUDENTS</h1>\n                            <p className=\"info-p\">The chance of a student being infected is <strong className=\"estimate-text\">VERY LOW</strong></p>\n                            <p className=\"info-p\"><strong>However,</strong> this does <strong>NOT</strong> mean infection is impossible. Please continue to adhere to COVID-19 precaution guidelines.</p>\n                            <p className=\"student-infectious\">The student infectious rate in the specified community is <strong className=\"orange-text\">{studentInfectious}%</strong></p>\n                        </div>\n                    </div>\n                    <div className=\"breakdown\">\n                        <h1 className=\"breakdown-title\">STATISTICAL BREAKDOWN</h1>\n                        <p>While our best estimate for the infection probability is <strong className=\"estimate-text\">{percentStudent}%,</strong> please note that this is still an approximation. However...</p>\n                        <p className=\"confidence-p\">We are <strong>95%</strong> confident that the infection probability is at least less than <strong className=\"orange-text\">{probStudent95}%</strong></p>\n                        <p className=\"confidence-p\"><strong>75%</strong> confident: less than <strong className=\"orange-text\">{probStudent75}%</strong></p>\n                        <p className=\"confidence-p\"><strong>50%</strong> confident: less than <strong className=\"orange-text\">{probStudent50}%</strong></p>\n                        <p className=\"confidence-p\"><strong>25%</strong> confident: less than <strong className=\"orange-text\">{probStudent25}%</strong></p>\n                        <p className=\"confidence-p\"><strong> 5%</strong> confident: less than <strong className=\"orange-text\">{probStudent5}%</strong></p>\n                        <br></br>\n                    </div>\n                </div>\n            </nav>\n        )\n    }\n}\n\nexport default Results;"]},"metadata":{},"sourceType":"module"}