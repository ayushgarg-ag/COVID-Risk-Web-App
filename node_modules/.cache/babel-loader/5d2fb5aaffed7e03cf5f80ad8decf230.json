{"ast":null,"code":"import _classCallCheck from\"/Users/ayushgarg/COMPUTER SCIENCE/MUSER Covid Research/COVID-Risk-Web-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ayushgarg/COMPUTER SCIENCE/MUSER Covid Research/COVID-Risk-Web-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/ayushgarg/COMPUTER SCIENCE/MUSER Covid Research/COVID-Risk-Web-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/ayushgarg/COMPUTER SCIENCE/MUSER Covid Research/COVID-Risk-Web-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/ayushgarg/COMPUTER SCIENCE/MUSER Covid Research/COVID-Risk-Web-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'./CustomSlider.css';/*\n    To use slider as a custom HTML tag in any other component:\n\n    ex:     import CustomSlider from './CustomSlider';\n            <CustomSlider min='0' max='100' step_count='0.5'/>\n\n    min = minimum allowable value\n    max = maximum allowable value\n    step_count = step size of the sliders (interval between each increment)\n\n    To change styling:\n    -you can change any colors to whatever\n    -you can change 'width' and 'max-width' in lines 3-4 to change the width of the slider to whatever (make sure width is a percentage)\n    -plz try not to change anything else unless u understand what its doing cause a lot of scaling is hard-coded\n     and it was frickin annoying to set the correct values thnx... :)\n*/var CustomSlider=/*#__PURE__*/function(_React$Component){_inherits(CustomSlider,_React$Component);var _super=_createSuper(CustomSlider);function CustomSlider(props){var _this;_classCallCheck(this,CustomSlider);_this=_super.call(this,props);console.log(props);_this.state={lvalue:parseFloat(_this.props.defaultLeft),//this value holds the MIN input value (to be used for back-end)\nrvalue:parseFloat(_this.props.defaultRight),//this value holds the MAX input value\n_step:parseFloat(_this.props.step_count)};_this.leftInputUpdated=_this.leftInputUpdated.bind(_assertThisInitialized(_this));_this.rightInputUpdated=_this.rightInputUpdated.bind(_assertThisInitialized(_this));return _this;}_createClass(CustomSlider,[{key:\"leftInputUpdated\",value:function leftInputUpdated(event){var targetValue=event.target.value;targetValue=Math.min(targetValue,this.state.rvalue-this.state._step);this.setState({lvalue:targetValue});}},{key:\"rightInputUpdated\",value:function rightInputUpdated(event){var targetValue=event.target.value;targetValue=Math.max(targetValue,this.state.lvalue+this.state._step);this.setState({rvalue:targetValue});// this.props.defaultRight = \"\"+this.state.rvalue;\n// console.log(this.state.rvalue);\n// console.log(this.props.defaultRight);\n}},{key:\"calcPercent\",value:function calcPercent(targetValue){return(targetValue-this.props.min)/(this.props.max-this.props.min)*100;}},{key:\"roundValue\",value:function roundValue(targetValue){return Math.round(targetValue*1000)/1000;}},{key:\"render\",value:function render(){var rangeStyle={left:this.calcPercent(this.state.lvalue)+'%',right:100-this.calcPercent(this.state.rvalue)+'%'};return/*#__PURE__*/React.createElement(\"div\",{id:\"frame\",className:this.props.className},/*#__PURE__*/React.createElement(\"input\",{className:this.props.className,type:\"range\",min:this.props.min,max:this.props.max,step:this.props.step_count,value:this.state.lvalue,onInput:this.leftInputUpdated,onChange:this.props.changeLeft}),/*#__PURE__*/React.createElement(\"input\",{className:this.props.className,type:\"range\",min:this.props.min,max:this.props.max,step:this.props.step_count,value:this.state.rvalue,onInput:this.rightInputUpdated,onChange:this.props.changeRight}),/*#__PURE__*/React.createElement(\"div\",{className:\"bar\"},/*#__PURE__*/React.createElement(\"div\",{className:\"track\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"range\",style:rangeStyle}),/*#__PURE__*/React.createElement(\"div\",{className:\"thumb left\",style:{left:this.calcPercent(this.state.lvalue)+'%'}}),/*#__PURE__*/React.createElement(\"div\",{className:\"thumb right\",style:{right:100-this.calcPercent(this.state.rvalue)+'%'}}),/*#__PURE__*/React.createElement(\"p\",{className:\"info left\",style:{left:this.calcPercent(this.state.lvalue)+'%'}},this.roundValue(this.state.lvalue)),/*#__PURE__*/React.createElement(\"p\",{className:\"info right\",style:{right:100-this.calcPercent(this.state.rvalue)+'%'}},this.roundValue(this.state.rvalue))));}}]);return CustomSlider;}(React.Component);export default CustomSlider;","map":{"version":3,"sources":["/Users/ayushgarg/COMPUTER SCIENCE/MUSER Covid Research/COVID-Risk-Web-App/src/components/CustomSlider.js"],"names":["React","CustomSlider","props","console","log","state","lvalue","parseFloat","defaultLeft","rvalue","defaultRight","_step","step_count","leftInputUpdated","bind","rightInputUpdated","event","targetValue","target","value","Math","min","setState","max","round","rangeStyle","left","calcPercent","right","className","changeLeft","changeRight","roundValue","Component"],"mappings":"g8BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,oBAAP,CAEA;;;;;;;;;;;;;;;KAiBMC,CAAAA,Y,wHACF,sBAAYC,KAAZ,CAAkB,8CACd,uBAAMA,KAAN,EACAC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACA,MAAKG,KAAL,CAAa,CACTC,MAAM,CAAEC,UAAU,CAAC,MAAKL,KAAL,CAAWM,WAAZ,CADT,CACmC;AAC5CC,MAAM,CAAEF,UAAU,CAAC,MAAKL,KAAL,CAAWQ,YAAZ,CAFT,CAEoC;AAC7CC,KAAK,CAAEJ,UAAU,CAAC,MAAKL,KAAL,CAAWU,UAAZ,CAHR,CAAb,CAMA,MAAKC,gBAAL,CAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,+BAAxB,CACA,MAAKC,iBAAL,CAAyB,MAAKA,iBAAL,CAAuBD,IAAvB,+BAAzB,CAVc,aAWjB,C,mFAEgBE,K,CAAM,CACnB,GAAIC,CAAAA,WAAW,CAAGD,KAAK,CAACE,MAAN,CAAaC,KAA/B,CACAF,WAAW,CAAGG,IAAI,CAACC,GAAL,CAASJ,WAAT,CAAsB,KAAKZ,KAAL,CAAWI,MAAX,CAAoB,KAAKJ,KAAL,CAAWM,KAArD,CAAd,CAEA,KAAKW,QAAL,CAAc,CAAEhB,MAAM,CAAEW,WAAV,CAAd,EACH,C,4DACiBD,K,CAAM,CACpB,GAAIC,CAAAA,WAAW,CAAGD,KAAK,CAACE,MAAN,CAAaC,KAA/B,CACAF,WAAW,CAAGG,IAAI,CAACG,GAAL,CAASN,WAAT,CAAsB,KAAKZ,KAAL,CAAWC,MAAX,CAAoB,KAAKD,KAAL,CAAWM,KAArD,CAAd,CAEA,KAAKW,QAAL,CAAc,CAAEb,MAAM,CAAEQ,WAAV,CAAd,EACA;AACA;AACA;AACH,C,gDAEWA,W,CAAY,CACpB,MAAQ,CAACA,WAAW,CAAG,KAAKf,KAAL,CAAWmB,GAA1B,GAAkC,KAAKnB,KAAL,CAAWqB,GAAX,CAAiB,KAAKrB,KAAL,CAAWmB,GAA9D,CAAD,CAAuE,GAA9E,CACH,C,8CAEUJ,W,CAAY,CACnB,MAAOG,CAAAA,IAAI,CAACI,KAAL,CAAWP,WAAW,CAAG,IAAzB,EAAiC,IAAxC,CACH,C,uCAEO,CACJ,GAAMQ,CAAAA,UAAU,CAAG,CACfC,IAAI,CAAE,KAAKC,WAAL,CAAiB,KAAKtB,KAAL,CAAWC,MAA5B,EAAsC,GAD7B,CAEfsB,KAAK,CAAG,IAAM,KAAKD,WAAL,CAAiB,KAAKtB,KAAL,CAAWI,MAA5B,CAAP,CAA8C,GAFtC,CAAnB,CAKA,mBACI,2BAAK,EAAE,CAAC,OAAR,CAAgB,SAAS,CAAE,KAAKP,KAAL,CAAW2B,SAAtC,eACI,6BACI,SAAS,CAAE,KAAK3B,KAAL,CAAW2B,SAD1B,CAEI,IAAI,CAAC,OAFT,CAGI,GAAG,CAAE,KAAK3B,KAAL,CAAWmB,GAHpB,CAII,GAAG,CAAE,KAAKnB,KAAL,CAAWqB,GAJpB,CAKI,IAAI,CAAE,KAAKrB,KAAL,CAAWU,UALrB,CAMI,KAAK,CAAE,KAAKP,KAAL,CAAWC,MANtB,CAOI,OAAO,CAAE,KAAKO,gBAPlB,CAQI,QAAQ,CAAE,KAAKX,KAAL,CAAW4B,UARzB,EADJ,cAUI,6BACI,SAAS,CAAE,KAAK5B,KAAL,CAAW2B,SAD1B,CAEI,IAAI,CAAC,OAFT,CAGI,GAAG,CAAE,KAAK3B,KAAL,CAAWmB,GAHpB,CAII,GAAG,CAAE,KAAKnB,KAAL,CAAWqB,GAJpB,CAKI,IAAI,CAAE,KAAKrB,KAAL,CAAWU,UALrB,CAMI,KAAK,CAAE,KAAKP,KAAL,CAAWI,MANtB,CAOI,OAAO,CAAE,KAAKM,iBAPlB,CAQI,QAAQ,CAAE,KAAKb,KAAL,CAAW6B,WARzB,EAVJ,cAmBI,2BAAK,SAAS,CAAC,KAAf,eACI,2BAAK,SAAS,CAAC,OAAf,EADJ,cAEI,2BAAK,SAAS,CAAC,OAAf,CACI,KAAK,CAAEN,UADX,EAFJ,cAII,2BAAK,SAAS,CAAC,YAAf,CACI,KAAK,CAAE,CAACC,IAAI,CAAE,KAAKC,WAAL,CAAiB,KAAKtB,KAAL,CAAWC,MAA5B,EAAsC,GAA7C,CADX,EAJJ,cAMI,2BAAK,SAAS,CAAC,aAAf,CACI,KAAK,CAAE,CAACsB,KAAK,CAAG,IAAM,KAAKD,WAAL,CAAiB,KAAKtB,KAAL,CAAWI,MAA5B,CAAP,CAA8C,GAAtD,CADX,EANJ,cAQI,yBAAG,SAAS,CAAC,WAAb,CACI,KAAK,CAAE,CAACiB,IAAI,CAAE,KAAKC,WAAL,CAAiB,KAAKtB,KAAL,CAAWC,MAA5B,EAAsC,GAA7C,CADX,EAC+D,KAAK0B,UAAL,CAAgB,KAAK3B,KAAL,CAAWC,MAA3B,CAD/D,CARJ,cAUI,yBAAG,SAAS,CAAC,YAAb,CACI,KAAK,CAAE,CAACsB,KAAK,CAAG,IAAM,KAAKD,WAAL,CAAiB,KAAKtB,KAAL,CAAWI,MAA5B,CAAP,CAA8C,GAAtD,CADX,EACwE,KAAKuB,UAAL,CAAgB,KAAK3B,KAAL,CAAWI,MAA3B,CADxE,CAVJ,CAnBJ,CADJ,CAmCH,C,0BA/EsBT,KAAK,CAACiC,S,EAkFjC,cAAehC,CAAAA,YAAf","sourcesContent":["import React from 'react';\nimport './CustomSlider.css';\n\n/*\n    To use slider as a custom HTML tag in any other component:\n\n    ex:     import CustomSlider from './CustomSlider';\n            <CustomSlider min='0' max='100' step_count='0.5'/>\n\n    min = minimum allowable value\n    max = maximum allowable value\n    step_count = step size of the sliders (interval between each increment)\n\n    To change styling:\n    -you can change any colors to whatever\n    -you can change 'width' and 'max-width' in lines 3-4 to change the width of the slider to whatever (make sure width is a percentage)\n    -plz try not to change anything else unless u understand what its doing cause a lot of scaling is hard-coded\n     and it was frickin annoying to set the correct values thnx... :)\n*/\n\nclass CustomSlider extends React.Component{\n    constructor(props){\n        super(props);\n        console.log(props)\n        this.state = {\n            lvalue: parseFloat(this.props.defaultLeft), //this value holds the MIN input value (to be used for back-end)\n            rvalue: parseFloat(this.props.defaultRight), //this value holds the MAX input value\n            _step: parseFloat(this.props.step_count),\n        }\n\n        this.leftInputUpdated = this.leftInputUpdated.bind(this);\n        this.rightInputUpdated = this.rightInputUpdated.bind(this);\n    }\n\n    leftInputUpdated(event){\n        var targetValue = event.target.value;\n        targetValue = Math.min(targetValue, this.state.rvalue - this.state._step);\n\n        this.setState({ lvalue: targetValue });\n    }\n    rightInputUpdated(event){\n        var targetValue = event.target.value;\n        targetValue = Math.max(targetValue, this.state.lvalue + this.state._step);\n\n        this.setState({ rvalue: targetValue });\n        // this.props.defaultRight = \"\"+this.state.rvalue;\n        // console.log(this.state.rvalue);\n        // console.log(this.props.defaultRight);\n    }\n\n    calcPercent(targetValue){\n        return ((targetValue - this.props.min) / (this.props.max - this.props.min)) * 100;\n    }\n\n    roundValue(targetValue){\n        return Math.round(targetValue * 1000) / 1000;\n    }\n\n    render(){\n        const rangeStyle = {\n            left: this.calcPercent(this.state.lvalue) + '%',\n            right: (100 - this.calcPercent(this.state.rvalue)) + '%'\n        };\n\n        return(\n            <div id=\"frame\" className={this.props.className}>\n                <input\n                    className={this.props.className}\n                    type='range'\n                    min={this.props.min}\n                    max={this.props.max}\n                    step={this.props.step_count}\n                    value={this.state.lvalue}\n                    onInput={this.leftInputUpdated}\n                    onChange={this.props.changeLeft}/>\n                <input\n                    className={this.props.className}\n                    type='range'\n                    min={this.props.min}\n                    max={this.props.max}\n                    step={this.props.step_count}\n                    value={this.state.rvalue}\n                    onInput={this.rightInputUpdated}\n                    onChange={this.props.changeRight}/>\n                <div className='bar'>\n                    <div className='track'/>\n                    <div className='range'\n                        style={rangeStyle}/>\n                    <div className='thumb left'\n                        style={{left: this.calcPercent(this.state.lvalue) + '%'}}/>\n                    <div className='thumb right'\n                        style={{right: (100 - this.calcPercent(this.state.rvalue)) + '%'}}/>\n                    <p className='info left'\n                        style={{left: this.calcPercent(this.state.lvalue) + '%'}}>{this.roundValue(this.state.lvalue)}</p>\n                    <p className='info right'\n                        style={{right: (100 - this.calcPercent(this.state.rvalue)) + '%'}}>{this.roundValue(this.state.rvalue)}</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CustomSlider;\n"]},"metadata":{},"sourceType":"module"}