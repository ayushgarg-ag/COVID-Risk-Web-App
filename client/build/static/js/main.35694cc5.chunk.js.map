{"version":3,"sources":["components/Home.js","components/Header.js","components/About.js","components/BasicClassroom.js","components/CustomSlider.js","components/AdvancedClassroom.js","components/BasicDining.js","components/AdvancedDining.js","components/BasicCommonroom.js","components/AdvancedCommonroom.js","components/CalculateHome.js","components/Results.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","href","Styles","styled","div","Header","Navbar","expand","Brand","target","id","Toggle","aria-controls","Collapse","Nav","Item","Link","About","BasicClassroom","useState","numFaculty","localStorage","getItem","numStudents","numSessions","durationSessions","classFloorArea","classHeight","county","state","masks","infectionRate","body","setBody","changeBodyInfo","e","value","setItem","a","inputs","parseInt","parseFloat","fetch","JSON","stringify","method","headers","response","json","result","console","log","type","onChange","placeholder","name","defaultChecked","htmlFor","onClick","CustomSlider","props","lvalue","defaultLeft","rvalue","defaultRight","_step","step_count","leftInputUpdated","bind","rightInputUpdated","event","targetValue","Math","min","this","setState","max","round","rangeStyle","left","calcPercent","right","step","onInput","changeLeft","changeRight","style","roundValue","React","Component","renderPercentageInfectiousTooltip","Tooltip","rel","renderMaskEfficiencyExhalationTooltip","renderMaskEfficiencyInhalationTooltip","renderRoomVentilationTooltip","renderAddlControlMeasuresTooltip","renderDecayRateTooltip","renderDepositionRateTooltip","renderFacultyInhalationRateTooltip","renderStudentInhalationRateTooltip","renderQuantaEmissionTooltip","AdvancedClassroom","facultyInfectious","studentInfectious","maskEffExhalation","maskEffInhalation","ventilationRate","addlControl","decayRate","depositionRate","facultyInhalation","studentInhalation","meanFacultyQuantaE","sdFacultyQuantaE","meanStudentQuantaE","sdStudentQuantaE","OverlayTrigger","placement","delay","show","hide","overlay","variant","BasicDining","AdvancedDining","BasicCommonroom","AdvancedCommonroom","renderBasicTooltip","renderAdvancedTooltip","CalculateHome","isLocationSelected","isClassroomSelected","isDiningSelected","isCommonRoomSelected","setLocationSelected","setClassroomSelected","setDiningSelected","setCommonRoomSelected","divHeader","divBody","chartStyle","Results","loading","setLoading","percentFaculty","setPercentFaculty","percentStudent","setPercentStudent","probFaculty5","setProbFaculty5","probFaculty25","setProbFaculty25","probFaculty50","setProbFaculty50","probFaculty75","setProbFaculty75","probFaculty95","setProbFaculty95","probStudent5","setProbStudent5","probStudent25","setProbStudent25","probStudent50","setProbStudent50","probStudent75","setProbStudent75","probStudent95","setProbStudent95","facultyInfectiousLow","setFacultyInfectiousLow","facultyInfectiousHigh","setFacultyInfectiousHigh","studentInfectiousLow","setStudentInfectiousLow","studentInfectiousHigh","setStudentInfectiousHigh","parseValue","toFixed","getScaleValue","scaleValue","useEffect","loadData","nrOfLevels","percent","textColor","hideText","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.35694cc5.chunk.js","sourcesContent":["import React from 'react';\nimport './Home.css';\n\nfunction Home(){\n    return(\n        <nav className=\"left-layout\">\n            <h1 className=\"title\">COVID-19<br/>EXPOSURE MODEL</h1>\n            <p className=\"desc\">\n                This is a tool to help understand COVID-19 transmission risk to students \n                and teachers/professors due to transmission by microscopic airborne particles \n                in classroom settings.\n            </p>\n            <a href=\"/calculate-home\">\n                <button className=\"btn btn-primary\">CALCULATE</button><br/>\n            </a>\n            <a href=\"/about\">\n                <button className=\"btn btn-basic\">HOW IT WORKS</button>\n            </a>\n        </nav>\n    )\n}\n\nexport default Home;","import React from 'react';\nimport { Nav, Navbar} from 'react-bootstrap';\nimport styled from 'styled-components';\n\nconst Styles = styled.div`\n  .navbar { background-color: #fff; }\n  a, .navbar-nav, .navbar-light .nav-link {\n    color: #012169;\n    &:hover { color: black; }\n  }\n  .navbar-brand {\n    font-size: 1.4em;\n    color: #012169;\n    font-family: 'Cormorant Garamond', Garamond, Georgia, 'Times New Roman', Times, serif;\n    &:hover { color: black; }\n  }\n  #duke-link {\n    font-size: 1.4em;\n    color: #000;\n    &:hover { color: #012169 ; }\n  }\n`;\n\nexport const Header = () => (\n  <Styles>\n    <Navbar expand=\"lg\">\n      <Navbar.Brand href=\"/\"><b>COVID-19 Exposure Modeler</b></Navbar.Brand>\n      <Navbar.Brand href=\"https://duke.edu/\" target=\"blank\" id=\"duke-link\">Duke University</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"ml-auto\">\n          <Nav.Item><Nav.Link href=\"/\">Home</Nav.Link></Nav.Item> \n          <Nav.Item><Nav.Link href=\"/about\">About</Nav.Link></Nav.Item>\n          <Nav.Item><Nav.Link href=\"/calculate-home\">Calculate</Nav.Link></Nav.Item>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  </Styles>\n)\n","import React from 'react';\nimport './About.css';\n\nfunction About(){\n    return(\n        <nav className=\"left-layout\">\n            <div>\n                <h1 className=\"title\">ABOUT THE MODEL</h1>\n                <p className=\"about-desc\">\n                    This is a tool to help understand COVID-19 transmission risk to students and teachers/professors \n                    due to transmission by microscopic airborne particles (i.e. aerosols) in classroom settings. \n                    This is not an infectious disease dynamics model, but rather a model that predicts airborne virion \n                    concentrations within a classroom, taking into account exhalation of virion-containing aerosols \n                    by infected individuals and the loss of these particles due to various processes. Probabilities of \n                    infection are calculated based on the virion dose inhaled (accounting for use of masks) by \n                    uninfected people in the classroom.\n                    <br/><br/>\n                    The risk calculations here are only for disease transmission by the airborne aerosol route, and do \n                    not account for transmission by droplets or from contaminated surfaces. The implicit assumption is \n                    that appropriate social distancing and hygiene protocols are strictly adhered to in the classroom. \n                    To the extent that this is not true, the risk of infection will be higher than predicted by these \n                    calculations. Users should also also bear in mind that the absolute estimates of predicted risk from \n                    this model are quite uncertain because of uncertainties in our knowledge of key parameters such as \n                    the exhalation rate of virion-containing aerosols by infected individuals and the percentage of \n                    infected individuals in the classroom. The model is nevertheless useful to explore the relative \n                    effects of control measures (e.g. more ventilation, fewer people, shorter duration, masks vs no \n                    masks) on COVID-19 transmission by aerosols in classrooms.\n                </p>\n            </div>\n            <div className=\"team-segment\">\n                <h3 className=\"team-title\">THE TEAM</h3>\n                <p className=\"team-desc\">\n                    This probabilistic Monte Carlo framework was developed by <strong>Prasad Kasibhatla</strong>, as \n                    an offshoot of the COVID-19 risk estimator developed by Jose Jimenez.\n                </p>\n                <p className=\"team-subtitle\"><strong>FRONT END</strong><br/>Donghan Park, Helen Xiao, Kevin Yin, Jennifer Schultz, Ayush Garg</p>\n                <p className=\"team-subtitle\"><strong>BACK END</strong><br/>Akash Mullick, Ameya Rao</p>\n                <p className=\"team-subtitle\"><strong>MOBILE DEVELOPMENT</strong><br/>Jerry Hou, Isabel Garfinkel</p>\n            </div>\n        </nav>\n    )\n}\n\nexport default About;","import React, {useState} from 'react';\nimport './Classroom.css';\n// import { BsFillQuestionCircleFill } from \"react-icons/bs\";\n// import OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\n// import Tooltip from \"react-bootstrap/Tooltip\";\n\n// function renderTooltip(props) {\n//   return <Tooltip {...props}>Typical value for the general population, with a variety of types of masks and also variation on how well they are worn\n//   </Tooltip>;\n// }\n\nfunction BasicClassroom(){\n    const [body, setBody] = useState({\n      numFaculty: localStorage.getItem(\"numFaculty\") || 1,\n      numStudents: localStorage.getItem(\"numStudents\") || '',\n      numSessions: localStorage.getItem(\"numSessions\") || '',\n      durationSessions: localStorage.getItem(\"durationSessions\") || '',\n      classFloorArea: localStorage.getItem(\"classFloorArea\") || '',\n      classHeight: localStorage.getItem(\"classHeight\") || '',\n      county: localStorage.getItem(\"county\") || '',\n      state: localStorage.getItem(\"state\") || '',\n      masks: localStorage.getItem(\"masks\") || '1',\n      infectionRate: localStorage.getItem(\"infectionRate\") || ''\n    });\n\n    function changeBodyInfo(e) {\n      setBody({...body, [e.target.className]:e.target.value})\n      localStorage.setItem(e.target.className, e.target.value)\n    }\n\n    async function calculate() {\n      var inputs = {\n        'numFaculty': parseInt(body.numFaculty),\n        'numStudents': parseInt(body.numStudents),\n        'numSessions': parseInt(body.numSessions),\n        'durationSessions': parseFloat(body.durationSessions),\n        'classFloorArea': parseFloat(body.classFloorArea),\n        'classHeight': parseFloat(body.classHeight),\n        'county': body.county,\n        'state': body.state,\n        'masks': parseInt(body.masks),\n        'infectionRate': parseFloat(body.infectionRate)\n      };\n\n      const response = await fetch('/api/classroombasic', {\n        body: JSON.stringify(inputs),\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n      });\n      const result = await response.json();\n      console.log(result);      \n    }\n\n    return(\n        <div className=\"left-layout\">\n          <div className='basic-frame'>\n              <div className='title-bar'>\n                  <h1 className='title'>BASIC CALCULATION</h1>\n              </div>\n              <div className='box'>\n                  <p className='directions'><strong>Please enter the following parameters:</strong></p>\n                  <div className='input-line'>\n                      <p className='parameter-basic'>Number of faculty?</p>\n                      <input type = \"number\" className = \"numFaculty\" value = {body.numFaculty} onChange = {changeBodyInfo}/>\n                  </div>\n                  <div className='input-line'>\n                      <p className='parameter-basic'>Number of students?</p>\n                      <input type = \"number\" className = \"numStudents\" value = {body.numStudents} onChange = {changeBodyInfo}/>\n                  </div>\n                  <div className='input-line'>\n                      <p className='parameter-basic'>Number of in-person sessions?</p>\n                      <input type = \"number\" className = \"numSessions\" value = {body.numSessions} onChange = {changeBodyInfo}/>\n                  </div>\n                  <div className='input-line'>\n                      <p className='parameter-basic'>Duration of in-person sessions (min)?</p>\n                      <input type = \"number\" className = \"durationSessions\" value = {body.durationSessions} onChange = {changeBodyInfo}/>\n                  </div>\n                  <div className='input-line'>\n                      <p className='parameter-basic'>Classroom floor area (sq. ft)?</p>\n                      <input type = \"number\" className = \"classFloorArea\" value = {body.classFloorArea} onChange = {changeBodyInfo} placeholder={900}/>\n                  </div>\n                  <div className='input-line'>\n                      <p className='parameter-basic'>Classroom Height (ft)?</p>\n                      <input type = \"number\" className = \"classHeight\" value = {body.classHeight} onChange = {changeBodyInfo} placeholder={10}/>\n                  </div>\n                <div className='input-line'>\n                  <p>--------------------------------------------------------------------</p>\n                </div>\n                  <div className='input-line'>\n                      <p className='parameter-basic'>County</p>\n                      <input type = \"text\" className = \"county\" value = {body.county} onChange = {changeBodyInfo}/>\n                  </div>\n                  <div className='input-line'>\n                      <p className='parameter-basic'>State</p>\n                      <input type = \"text\" className = \"state\" value = {body.state} onChange = {changeBodyInfo}/>\n                  </div>\n                  <div className='input-line'>\n                    <p>OR</p>\n                  </div>\n                  <div className='input-line'>\n                    <p className='parameter-basic'>Infection Rate (%)</p>\n                    <input type=\"text\" className=\"infectionRate\" value={body.infectionRate} onChange={changeBodyInfo} />\n                  </div>\n\n                  <div className='input-line'>\n                    <div>\n                      <p className='parameter-basic'>Is everyone wearing masks?</p>\n                    </div>\n                    <div>\n                      <input type=\"radio\" id=\"yes\" name=\"masks\" className=\"masks\" value=\"1\" onChange = {changeBodyInfo} defaultChecked/>\n                      <label className=\"maskLabel\" htmlFor=\"yes\">Yes</label>\n                      <input type=\"radio\" id=\"no\" name=\"masks\" className=\"masks\" value=\"0\" onChange = {changeBodyInfo}/>\n                      <label className=\"maskLabel\" htmlFor=\"no\">No</label>\n                    </div>\n                  </div>\n                  <br/>\n                </div>\n                <a className='button-holder' id='link' href=\"/results\">\n                    <button id=\"calc\" className=\"calc-button\" onClick = {calculate}><strong>CALCULATE</strong></button>\n                </a>                \n            </div>\n        </div>\n    )\n}\n\n\nexport default BasicClassroom;\n","import React from 'react';\nimport './CustomSlider.css';\n\n/*\n    To use slider as a custom HTML tag in any other component:\n\n    ex:     import CustomSlider from './CustomSlider';\n            <CustomSlider min='0' max='100' step_count='0.5'/>\n\n    min = minimum allowable value\n    max = maximum allowable value\n    step_count = step size of the sliders (interval between each increment)\n\n    To change styling:\n    -you can change any colors to whatever\n    -you can change 'width' and 'max-width' in lines 3-4 to change the width of the slider to whatever (make sure width is a percentage)\n    -plz try not to change anything else unless u understand what its doing cause a lot of scaling is hard-coded\n     and it was frickin annoying to set the correct values thnx... :)\n*/\n\nclass CustomSlider extends React.Component{\n    constructor(props){\n        super(props);\n        console.log(props)\n        this.state = {\n            lvalue: parseFloat(this.props.defaultLeft), //this value holds the MIN input value (to be used for back-end)\n            rvalue: parseFloat(this.props.defaultRight), //this value holds the MAX input value\n            _step: parseFloat(this.props.step_count),\n        }\n\n        this.leftInputUpdated = this.leftInputUpdated.bind(this);\n        this.rightInputUpdated = this.rightInputUpdated.bind(this);\n    }\n\n    leftInputUpdated(event){\n        var targetValue = event.target.value;\n        targetValue = Math.min(targetValue, this.state.rvalue - this.state._step);\n\n        this.setState({ lvalue: targetValue });\n    }\n    rightInputUpdated(event){\n        var targetValue = event.target.value;\n        targetValue = Math.max(targetValue, this.state.lvalue + this.state._step);\n\n        this.setState({ rvalue: targetValue });\n        // this.props.defaultRight = \"\"+this.state.rvalue;\n        // console.log(this.state.rvalue);\n        // console.log(this.props.defaultRight);\n    }\n\n    calcPercent(targetValue){\n        return ((targetValue - this.props.min) / (this.props.max - this.props.min)) * 100;\n    }\n\n    roundValue(targetValue){\n        return Math.round(targetValue * 1000) / 1000;\n    }\n\n    render(){\n        const rangeStyle = {\n            left: this.calcPercent(this.state.lvalue) + '%',\n            right: (100 - this.calcPercent(this.state.rvalue)) + '%'\n        };\n\n        return(\n            <div id=\"frame\" className={this.props.className}>\n                <input\n                    className={this.props.className}\n                    type='range'\n                    min={this.props.min}\n                    max={this.props.max}\n                    step={this.props.step_count}\n                    value={this.state.lvalue}\n                    onInput={this.leftInputUpdated}\n                    onChange={this.props.changeLeft}/>\n                <input\n                    className={this.props.className}\n                    type='range'\n                    min={this.props.min}\n                    max={this.props.max}\n                    step={this.props.step_count}\n                    value={this.state.rvalue}\n                    onInput={this.rightInputUpdated}\n                    onChange={this.props.changeRight}/>\n                <div className='bar'>\n                    <div className='track'/>\n                    <div className='range'\n                        style={rangeStyle}/>\n                    <div className='thumb left'\n                        style={{left: this.calcPercent(this.state.lvalue) + '%'}}/>\n                    <div className='thumb right'\n                        style={{right: (100 - this.calcPercent(this.state.rvalue)) + '%'}}/>\n                    <p className='info left'\n                        style={{left: this.calcPercent(this.state.lvalue) + '%'}}>{this.roundValue(this.state.lvalue)}</p>\n                    <p className='info right'\n                        style={{right: (100 - this.calcPercent(this.state.rvalue)) + '%'}}>{this.roundValue(this.state.rvalue)}</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CustomSlider;\n","import React, {useState} from 'react';\nimport './Classroom.css';\nimport { BsFillQuestionCircleFill } from \"react-icons/bs\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport CustomSlider from './CustomSlider';\n\nfunction renderPercentageInfectiousTooltip(props) {\n  console.log(props)\n  return <Tooltip {...props}>This depends on the state of the pandemic in a given region and time period, as well as the dynamics of the disease and its infectivity in different types of cases, which are not known very precisely.\n  <a href=\"https://docs.google.com/spreadsheets/d/1LS2f28meUwiy-AxGQXyd1ily9HPbh9hvYD48Qulaj6s/edit#gid=0&range=A4\" target=\"_blank\" rel=\"noopener noreferrer\">\n    More information\n  </a>\n  </Tooltip>;\n}\n\nfunction renderMaskEfficiencyExhalationTooltip(props) {\n  return <Tooltip {...props}>For the case where no masks are used, set mask efficiency to 0.\n  <a href=\"https://docs.google.com/spreadsheets/d/1LS2f28meUwiy-AxGQXyd1ily9HPbh9hvYD48Qulaj6s/edit#gid=0&range=A30\" target=\"_blank\" rel=\"noopener noreferrer\">\n    More information\n  </a>\n  </Tooltip>;\n}\n\nfunction renderMaskEfficiencyInhalationTooltip(props) {\n  return <Tooltip {...props}>For the case where no masks are used, set mask efficiency to 0.\n  <a href=\"https://docs.google.com/spreadsheets/d/1LS2f28meUwiy-AxGQXyd1ily9HPbh9hvYD48Qulaj6s/edit#gid=0&range=A44\" target=\"_blank\" rel=\"noopener noreferrer\">\n    More information\n  </a>\n  </Tooltip>;\n}\n\nfunction renderRoomVentilationTooltip(props) {\n  return <Tooltip {...props}> See link for literature values for several situations in h-1.\n  <a href=\"https://docs.google.com/spreadsheets/d/1LS2f28meUwiy-AxGQXyd1ily9HPbh9hvYD48Qulaj6s/edit#gid=0&range=A51\" target=\"_blank\" rel=\"noopener noreferrer\">\n    More information\n  </a>\n  </Tooltip>;\n}\n\nfunction renderAddlControlMeasuresTooltip(props) {\n  return <Tooltip {...props}> See link for virus removal rate due to additional control measures.\n  <a href=\"https://docs.google.com/spreadsheets/d/1LS2f28meUwiy-AxGQXyd1ily9HPbh9hvYD48Qulaj6s/edit#gid=0&range=A66\" target=\"_blank\" rel=\"noopener noreferrer\">\n    More information\n  </a>\n  </Tooltip>;\n}\n\nfunction renderDecayRateTooltip(props) {\n  return <Tooltip {...props}> See link for literature values in h-1.\n  <a href=\"https://docs.google.com/spreadsheets/d/1LS2f28meUwiy-AxGQXyd1ily9HPbh9hvYD48Qulaj6s/edit#gid=0&range=A78\" target=\"_blank\" rel=\"noopener noreferrer\">\n    More information\n  </a>\n  </Tooltip>;\n}\n\nfunction renderDepositionRateTooltip(props) {\n  return <Tooltip {...props}>An important uncertainty is the size range of the infective particles. Here we assume 1-5 um, based on our read of the literature.\n  <a href=\"https://docs.google.com/spreadsheets/d/1LS2f28meUwiy-AxGQXyd1ily9HPbh9hvYD48Qulaj6s/edit#gid=0&range=A95\" target=\"_blank\" rel=\"noopener noreferrer\">\n    More information\n  </a>\n  </Tooltip>;\n}\n\nfunction renderFacultyInhalationRateTooltip(props) {\n  return <Tooltip {...props}>Default values for faculty are mean percentile breathing rates for combination of passive and light activity for 41 to &lt51 years age-group.\n  <a href=\"https://docs.google.com/spreadsheets/d/1LS2f28meUwiy-AxGQXyd1ily9HPbh9hvYD48Qulaj6s/edit#gid=0&range=A101\" target=\"_blank\" rel=\"noopener noreferrer\">\n    More information\n  </a>\n  </Tooltip>;\n}\n\nfunction renderStudentInhalationRateTooltip(props) {\n  return <Tooltip {...props}>Default values for students are short-term mean-95th percentile breathing rates for passive activity for 16 to &lt21 years age-group.\n  <a href=\"https://docs.google.com/spreadsheets/d/1LS2f28meUwiy-AxGQXyd1ily9HPbh9hvYD48Qulaj6s/edit#gid=0&range=A101\" target=\"_blank\" rel=\"noopener noreferrer\">\n    More information\n  </a>\n  </Tooltip>;\n}\n\nfunction renderQuantaEmissionTooltip(props) {\n  return <Tooltip {...props}>\n  <a href=\"https://docs.google.com/spreadsheets/d/1LS2f28meUwiy-AxGQXyd1ily9HPbh9hvYD48Qulaj6s/edit#gid=0&range=A107\" target=\"_blank\" rel=\"noopener noreferrer\">\n    More information\n  </a>\n  </Tooltip>;\n}\n\nfunction AdvancedClassroom(){\n    const [body, setBody] = useState({\n        numFaculty: localStorage.getItem(\"numFaculty\") || 1,\n        numStudents: localStorage.getItem(\"numStudents\") || '',\n        numSessions: localStorage.getItem(\"numSessions\") || '',\n        durationSessions: localStorage.getItem(\"durationSessions\") || '',\n        classFloorArea: localStorage.getItem(\"classFloorArea\") || '',\n        classHeight: localStorage.getItem(\"classHeight\") || '',\n        county: localStorage.getItem(\"county\") || '',\n        state: localStorage.getItem(\"state\") || '',\n        masks: localStorage.getItem(\"masks\") || '1',\n        facultyInfectious: [0.7,1.4],\n        studentInfectious: [0.7,1.4],\n        maskEffExhalation: [40,60],\n        maskEffInhalation: [30,50],\n        ventilationRate: [1,4],\n        addlControl: [0,0],\n        decayRate: [0,1.0],\n        depositionRate: [0.3,1.5],\n        facultyInhalation: [0.005,0.010],\n        studentInhalation: [0.005,0.007],\n        meanFacultyQuantaE: 1.5,\n        sdFacultyQuantaE: 0.71,\n        meanStudentQuantaE: 0.69,\n        sdStudentQuantaE: 0.71\n    });\n\n    function changeBodyInfo(e) {\n      setBody({...body, [e.target.className]:e.target.value})\n      localStorage.setItem(e.target.className, e.target.value)\n    }\n    function changeLeft(e){\n      var className = e.target.className\n      setBody({...body, [className]:[parseFloat(e.target.value), body[className][1]]})\n    }\n    function changeRight(e){\n      var className = e.target.className\n      setBody({...body, [className]:[body[className][0], parseFloat(e.target.value)]})\n    }\n  async function calculate() {\n    // var inputs = {\n    //     'numFaculty': parseInt(body.numFaculty),\n    //     'numStudents': parseInt(body.numStudents),\n    //     'numSessions': parseInt(body.numSessions),\n    //     'durationSessions': parseFloat(body.durationSessions),\n    //     'classFloorArea': parseFloat(body.classFloorArea),\n    //     'classHeight': parseFloat(body.classHeight),\n    //     'county': body.country,\n    //     'state': body.state,\n    //     'facultyInfectious': [parseFloat(body.facultyInfectious[0]), parseFloat(body.facultyInfectious[1])],\n    //     'studentInfectious': [parseFloat(body.studentInfectious[0]), parseFloat(body.studentInfectious[1])],\n    //     'maskEffExhalation': [parseFloat(body.maskEffExhalation[0]), parseFloat(body.maskEffExhalation[1])],\n    //     'maskEffInhalation': [parseFloat(body.maskEffInhalation[0]), parseFloat(body.maskEffInhalation[1])],\n    //     'ventilationRate': [parseFloat(body.ventilationRate[0]), parseFloat(body.ventilationRate[1])],\n    //     'addlControl': [parseFloat(body.addlControl[0]), parseFloat(body.addlControl[1])],\n    //     'decayRate': [parseFloat(body.decayRate[0]), parseFloat(body.decayRate[1])],\n    //     'depositionRate': [parseFloat(body.depositionRate[0]), parseFloat(body.depositionRate[1])],\n    //     'facultyInhalation': [parseFloat(body.facultyInhalation[0]), parseFloat(body.facultyInhalation[1])],\n    //     'studentInhalation': [parseFloat(body.studentInhalation[0]), parseFloat(body.studentInhalation[1])],\n    //     'meanFacultyQuantaE': parseFloat(body.meanFacultyQuantaE),\n    //     'sdFacultyQuantaE': parseFloat(body.sdFacultyQuantaE),\n    //     'meanStudentQuantaE': parseFloat(body.meanStudentQuantaE),\n    //     'sdStudentQuantaE': parseFloat(body.sdStudentQuantaE)\n    // };\n\n    const response = await fetch('/api/classroomadvanced', {\n      body: JSON.stringify(body), // body data type must match \"Content-Type\" header\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    });\n    const result = await response.json();\n    console.log(result);\n    }\n    return(\n        <div className=\"left-layout\">\n          <div className='basic-frame'>\n              <div className='title-bar'>\n                  <h1 className='title'>STEP 1: CLASSROOM PARAMETERS</h1>\n              </div>\n              <div className='box'>\n                  <p className='directions'><strong>Please enter the following parameters:</strong></p>\n                  <div className='input-line'>\n                      <p className='parameter-basic'>Number of faculty?</p>\n                      <input type = \"number\" className = \"numFaculty\" value = {body.numFaculty} onChange = {changeBodyInfo}/>\n                  </div>\n                  <div className='input-line'>\n                      <p className='parameter-basic'>Number of students?</p>\n                      <input type = \"number\" className = \"numStudents\" value = {body.numStudents} onChange = {changeBodyInfo}/>\n                  </div>\n                  <div className='input-line'>\n                      <p className='parameter-basic'>Number of in-person sessions?</p>\n                      <input type = \"number\" className = \"numSessions\" value = {body.numSessions} onChange = {changeBodyInfo}/>\n                  </div>\n                  <div className='input-line'>\n                      <p className='parameter-basic'>Duration of in-person sessions (min)?</p>\n                      <input type = \"number\" className = \"durationSessions\" value = {body.durationSessions} onChange = {changeBodyInfo}/>\n                  </div>\n                  <div className='input-line'>\n                      <p className='parameter-basic'>Classroom floor area (sq. ft)?</p>\n                      <input type = \"number\" className = \"classFloorArea\" value = {body.classFloorArea} onChange = {changeBodyInfo}/>\n                  </div>\n                  <div className='input-line'>\n                      <p className='parameter-basic'>Classroom Height (ft)?</p>\n                      <input type = \"number\" className = \"classHeight\" value = {body.classHeight} onChange = {changeBodyInfo}/>\n                  </div>\n                  <div className='input-line'>\n                      <p className='parameter-basic'>County</p>\n                      <input type = \"text\" className = \"county\" value = {body.county} onChange = {changeBodyInfo}/>\n                  </div>\n                  <div className='input-line'>\n                      <p className='parameter-basic'>State</p>\n                      <input type = \"text\" className = \"state\" value = {body.state} onChange = {changeBodyInfo}/>\n                  </div>\n                    <div className='input-line'>\n                        <div>\n                            <p className='parameter-basic'>Is everyone wearing masks?</p>\n                        </div>\n                        <div>\n                            <input type=\"radio\" id=\"yes\" name=\"masks\" className=\"masks\" value=\"1\" onChange={changeBodyInfo} defaultChecked />\n                            <label className=\"maskLabel\" htmlFor=\"yes\">Yes</label>\n                            <input type=\"radio\" id=\"no\" name=\"masks\" className=\"masks\" value=\"0\" onChange={changeBodyInfo} />\n                            <label className=\"maskLabel\" htmlFor=\"no\">No</label>\n                        </div>\n                    </div>\n                  <br/>\n                </div>\n            </div>\n            <div className='advanced-frame'>\n                <div className='title-bar'>\n                    <h1 className='title'>STEP 2: VARIABLE INPUTS</h1>\n                </div>\n                <div className='box'>\n                    <p className='directions'><strong>** The following are additional parameters that can be changed if a more detailed/custom calculation is desired **<br/><br/>These values are preset to default values and are not required to be modified for a simple basic calculation:</strong></p>\n                    <div className='input-line'>\n                        <p className='parameter-adv'>Percentage of faculty-age people in community who are infectious (%)</p>\n                        <div className='question'>\n                            <OverlayTrigger placement=\"right\" delay={{ show: 250, hide: 5000 }} overlay={renderPercentageInfectiousTooltip}>\n                                <BsFillQuestionCircleFill variant=\"success\" />\n                            </OverlayTrigger><br/>\n                        </div>\n                        <div className='slider-bar'>\n                            <CustomSlider className=\"facultyInfectious\" min='0' max='10' step_count='0.1' defaultLeft={body.facultyInfectious[0]} defaultRight={body.facultyInfectious[1]} changeLeft = {changeLeft} changeRight = {changeRight}/>\n                        </div>\n                    </div>\n                    <div className='input-line'>\n                        <p className='parameter-adv'>Percentage of student-age people in community who are infectious (%)</p>\n                        <div className='question'>\n                            <OverlayTrigger placement=\"right\" delay={{ show: 250, hide: 5000 }} overlay={renderPercentageInfectiousTooltip}>\n                                <BsFillQuestionCircleFill variant=\"success\" />\n                            </OverlayTrigger><br/>\n                        </div>\n                        <div className='slider-bar'>\n                            <CustomSlider className=\"studentInfectious\" min='0' max='10' step_count='0.1' defaultLeft={body.studentInfectious[0]} defaultRight={body.studentInfectious[1]} changeLeft = {changeLeft} changeRight = {changeRight}/>\n                        </div>\n                    </div>\n                    <div className='input-line'>\n                        <p className='parameter-adv'>Mask efficiency in reducing virus exhalation (%)</p>\n                        <div className='question'>\n                            <OverlayTrigger placement=\"right\" delay={{ show: 250, hide: 2000 }} overlay={renderMaskEfficiencyExhalationTooltip}>\n                                <BsFillQuestionCircleFill variant=\"success\" />\n                            </OverlayTrigger><br/>\n                        </div>\n                        <div className='slider-bar'>\n                            <CustomSlider className=\"maskEffExhalation\" min='0' max='100' step_count='1' defaultLeft={body.maskEffExhalation[0]} defaultRight={body.maskEffExhalation[1]} changeLeft = {changeLeft} changeRight = {changeRight}/>\n                        </div>\n                    </div>\n                    <div className='input-line'>\n                        <p className='parameter-adv'>Mask efficiency in reducing virus inhalation (%)</p>\n                        <div className='question'>\n                            <OverlayTrigger placement=\"right\" delay={{ show: 250, hide: 2000 }} overlay={renderMaskEfficiencyInhalationTooltip}>\n                                <BsFillQuestionCircleFill variant=\"success\" />\n                            </OverlayTrigger><br/>\n                        </div>\n                        <div className='slider-bar'>\n                            <CustomSlider className=\"maskEffInhalation\" min='0' max='100' step_count='1' defaultLeft={body.maskEffInhalation[0]} defaultRight={body.maskEffInhalation[1]} changeLeft = {changeLeft} changeRight = {changeRight}/>\n                        </div>\n                    </div>\n                    <div className='input-line'>\n                        <p className='parameter-adv'>Room air ventilation rate w/outside air (air changes per hour)</p>\n                        <div className='question'>\n                            <OverlayTrigger placement=\"right\" delay={{ show: 250, hide: 2000 }} overlay={renderRoomVentilationTooltip}>\n                                <BsFillQuestionCircleFill variant=\"success\" />\n                            </OverlayTrigger><br/>\n                        </div>\n                        <div className='slider-bar'>\n                            <CustomSlider className=\"ventilationRate\" min='0' max='10' step_count='1' defaultLeft={body.ventilationRate[0]} defaultRight={body.ventilationRate[1]} changeLeft = {changeLeft} changeRight = {changeRight}/>\n                        </div>\n                    </div>\n                    <div className='input-line'>\n                        <p className='parameter-adv'>Additional control measures (effective air changes per hour)</p>\n                        <div className='question'>\n                            <OverlayTrigger placement=\"right\" delay={{ show: 250, hide: 2000 }} overlay={renderAddlControlMeasuresTooltip}>\n                                <BsFillQuestionCircleFill variant=\"success\" />\n                            </OverlayTrigger><br/>\n                        </div>\n                        <div className='slider-bar'>\n                            <CustomSlider className=\"addlControl\" min='0' max='100' step_count='1' defaultLeft={body.addlControl[0]} defaultRight={body.addlControl[1]} changeLeft = {changeLeft} changeRight = {changeRight}/>\n                        </div>\n                    </div>\n                    <div className='input-line'>\n                        <p className='parameter-adv'>Decay rate of virus infectivity indoors (per hour)</p>\n                        <div className='question'>\n                            <OverlayTrigger placement=\"right\" delay={{ show: 250, hide: 2500 }} overlay={renderDecayRateTooltip}>\n                                <BsFillQuestionCircleFill variant=\"success\" />\n                            </OverlayTrigger><br/>\n                        </div>\n                        <div className='slider-bar'>\n                            <CustomSlider className=\"decayRate\" min='0' max='1' step_count='0.01' defaultLeft={body.decayRate[0]} defaultRight={body.decayRate[1]} changeLeft = {changeLeft} changeRight = {changeRight}/>\n                        </div>\n                    </div>\n                    <div className='input-line'>\n                        <p className='parameter-adv'>Deposition rate of virus to surfaces (per hour)</p>\n                        <div className='question'>\n                            <OverlayTrigger placement=\"right\" delay={{ show: 250, hide: 3500 }} overlay={renderDepositionRateTooltip}>\n                                <BsFillQuestionCircleFill variant=\"success\" />\n                            </OverlayTrigger><br/>\n                        </div>\n                        <div className='slider-bar'>\n                            <CustomSlider className=\"depositionRate\" min='0' max='1.5' step_count='0.1' defaultLeft={body.depositionRate[0]} defaultRight={body.depositionRate[1]} changeLeft = {changeLeft} changeRight = {changeRight}/>\n                        </div>\n                    </div>\n                    <div className='input-line'>\n                        <p className='parameter-adv'>Inhalation rate: Faculty (m³/minute)</p>\n                        <div className='question'>\n                            <OverlayTrigger placement=\"right\" delay={{ show: 250, hide: 3500 }} overlay={renderFacultyInhalationRateTooltip}>\n                                <BsFillQuestionCircleFill variant=\"success\" />\n                            </OverlayTrigger><br/>\n                        </div>\n                        <div className='slider-bar'>\n                            <CustomSlider className=\"facultyInhalation\" min='0.0' max='0.02' step_count='0.001' defaultLeft={body.facultyInhalation[0]} defaultRight={body.facultyInhalation[1]} changeLeft = {changeLeft} changeRight = {changeRight}/>\n                        </div>\n                    </div>\n                    <div className='input-line'>\n                        <p className='parameter-adv'>Inhalation rate: Student (m³/minute)</p>\n                        <div className='question'>\n                            <OverlayTrigger placement=\"right\" delay={{ show: 250, hide: 3500 }} overlay={renderStudentInhalationRateTooltip}>\n                                <BsFillQuestionCircleFill variant=\"success\" />\n                            </OverlayTrigger><br/>\n                        </div>\n                        <div className='slider-bar'>\n                            <CustomSlider className=\"studentInhalation\" min='0' max='0.02' step_count='0.001' defaultLeft={body.studentInhalation[0]} defaultRight={body.studentInhalation[1]} changeLeft = {changeLeft} changeRight = {changeRight}/>\n                        </div>\n                    </div>\n                    <p className='directions'><strong>For the below variables, please click the links before specifying.</strong></p>\n                    <div className='input-line'>\n                        <p className='parameter-adv'>log10[Quanta emission rate: Faculty (quanta/hour)]</p>\n                        <div className='question'>\n                            <OverlayTrigger placement=\"right\" delay={{ show: 250, hide: 800 }} overlay={renderQuantaEmissionTooltip}>\n                                <BsFillQuestionCircleFill variant=\"success\" />\n                            </OverlayTrigger><br/>\n                        </div>\n                        <p className='parameter-basic'></p>\n                        <input type = \"number\" className = \"meanFacultyQuantaE\" value = {body.meanFacultyQuantaE} onChange = {changeBodyInfo}/>\n                        <input type = \"number\" className = \"sdFacultyQuantaE\" value = {body.sdFacultyQuantaE} onChange = {changeBodyInfo}/>\n                    </div>\n                    <div className='input-line'>\n                        <p className='parameter-adv'>log10[Quanta emission rate: Student (quanta/hour)]</p>\n                        <div className='question'>\n                            <OverlayTrigger placement=\"right\" delay={{ show: 250, hide: 800 }} overlay={renderQuantaEmissionTooltip}>\n                                <BsFillQuestionCircleFill variant=\"success\" />\n                            </OverlayTrigger><br/>\n                        </div>\n                        <p className='parameter-basic'></p>\n                        <input type = \"number\" className = \"meanStudentQuantaE\" value = {body.meanStudentQuantaE} onChange = {changeBodyInfo}/>\n                        <input type = \"number\" className = \"sdStudentQuantaE\" value = {body.sdStudentQuantaE} onChange = {changeBodyInfo}/>\n                    </div>\n                    <br/>\n                </div>\n                <a className='button-holder' id='link' href=\"/results\">\n                    <button id=\"calc\" className=\"calc-button\" onClick={calculate}><strong>CALCULATE</strong></button>\n                </a>  \n            </div>\n        </div>\n    )\n}\n\nexport default AdvancedClassroom;\n","import React from 'react';\n\nfunction BasicDining(){\n    return(\n        <nav className=\"centered-layout\">\n            <h1 className=\"title\">Basic Dining Calculation</h1>\n            <p>\n                Basic Dining Caluculation Coming Soon!\n            </p>\n            <a href=\"/calculate-home\">\n                <button className=\"btn btn-primary\">Go Back</button><br/>\n            </a>\n        </nav>\n    )\n}\n\nexport default BasicDining;","import React from 'react';\n\nfunction AdvancedDining(){\n    return(\n        <nav className=\"centered-layout\">\n            <h1 className=\"title\">Advanced Dining Calculation</h1>\n            <p>\n                Advanced Dining Caluculation Coming Soon!\n            </p>\n            <a href=\"/calculate-home\">\n                <button className=\"btn btn-primary\">Go Back</button><br/>\n            </a>\n        </nav>\n    )\n}\n\nexport default AdvancedDining;","import React from 'react';\n\nfunction BasicCommonroom(){\n    return(\n        <nav className=\"centered-layout\">\n            <h1 className=\"title\">Basic Commonroom Calculation</h1>\n            <p>\n                Basic Commonroom Caluculation Coming Soon!\n            </p>\n            <a href=\"/calculate-home\">\n                <button className=\"btn btn-primary\">Go Back</button><br/>\n            </a>\n        </nav>\n    )\n}\n\nexport default BasicCommonroom;","import React from 'react';\n\nfunction AdvancedCommonroom(){\n    return(\n        <nav className=\"centered-layout\">\n            <h1 className=\"title\">Advanced Commonroom Calculation</h1>\n            <p>\n                Advanced Commonroom Caluculation Coming Soon!\n            </p>\n            <a href=\"/calculate-home\">\n                <button className=\"btn btn-primary\">Go Back</button><br/>\n            </a>\n        </nav>\n    )\n}\n\nexport default AdvancedCommonroom;","import React from 'react';\nimport '../App.css';\nimport './CalculateHome.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BsFillQuestionCircleFill } from \"react-icons/bs\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\n\nfunction renderBasicTooltip(props) {\n    return <Tooltip {...props}>The basic assessment is best for most users.</Tooltip>;\n}\nfunction renderAdvancedTooltip(props) {\n    return <Tooltip {...props}>The advanced assessment is best for users who want to input more specific values.</Tooltip>;\n}\n\nexport default class CalculateHome extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLocationSelected: false,\n            isClassroomSelected: false,\n            isDiningSelected: false,\n            isCommonRoomSelected: false\n        };\n\n        this.setLocationSelected = this.setLocationSelected.bind(this);\n        this.setClassroomSelected = this.setClassroomSelected.bind(this);\n        this.setDiningSelected = this.setDiningSelected.bind(this);\n        this.setCommonRoomSelected = this.setCommonRoomSelected.bind(this);\n    }\n\n    setLocationSelected(event) {\n        this.setState({isLocationSelected: true})\n    }\n    setClassroomSelected(event) {\n        this.setState({isLocationSelected: true})\n        this.setState({isClassroomSelected: true})\n    }\n    setDiningSelected(event) {\n        this.setState({isLocationSelected: true})\n        this.setState({isDiningSelected: true})\n    }\n    setCommonRoomSelected(event) {\n        this.setState({isLocationSelected: true})\n        this.setState({isCommonRoomSelected: true})\n    }\n\n\n    render() {\n        const isLocationSelected = this.state.isLocationSelected;\n        const isClassroomSelected = this.state.isClassroomSelected;\n        const isDiningSelected = this.state.isDiningSelected;\n        const isCommonRoomSelected = this.state.isCommonRoomSelected;\n        let divHeader;\n        let divBody;\n\n        if (isLocationSelected) {\n            divHeader = \n            <nav className=\"centered-layout\">\n                <h2 className=\"title\">EXPOSURE CALCULATION</h2>\n                <p className=\"desc\">\n                    What kind of Assessment?\n                </p>\n            </nav>\n            if (isClassroomSelected) {\n                divBody = \n                <nav>\n                    <a href=\"/basic-classroom\">\n                        <button className=\"btn btn-secondary\">BASIC</button>\n                    </a>\n                    <OverlayTrigger placement=\"right\" delay={{ show: 250, hide: 400 }} overlay={renderBasicTooltip}>\n                    <BsFillQuestionCircleFill variant=\"success\" />\n                    </OverlayTrigger>\n                    <a href=\"/advanced-classroom\">\n                        <button className=\"btn btn-secondary\">ADVANCED</button>\n                    </a>\n                    <OverlayTrigger placement=\"right\" delay={{ show: 250, hide: 400 }} overlay={renderAdvancedTooltip}>\n                    <BsFillQuestionCircleFill variant=\"success\" />\n                    </OverlayTrigger>\n                </nav>\n            }\n            else if (isDiningSelected) {\n                divBody = \n                <nav>\n                    <a href=\"/basic-dining\">\n                        <button className=\"btn btn-secondary\">BASIC</button>\n                    </a>\n                    <OverlayTrigger placement=\"right\" delay={{ show: 250, hide: 400 }} overlay={renderBasicTooltip}>\n                    <BsFillQuestionCircleFill variant=\"success\" />\n                    </OverlayTrigger>\n                    <a href=\"/advanced-dining\">\n                        <button className=\"btn btn-secondary\">ADVANCED</button>\n                    </a>\n                    <OverlayTrigger placement=\"right\" delay={{ show: 250, hide: 400 }} overlay={renderAdvancedTooltip}>\n                    <BsFillQuestionCircleFill variant=\"success\" />\n                    </OverlayTrigger>\n                </nav>\n            }\n            else if (isCommonRoomSelected) {\n                divBody = \n                <nav>\n                    <a href=\"/basic-commonroom\">\n                        <button className=\"btn btn-secondary\">BASIC</button>\n                    </a>\n                    <OverlayTrigger placement=\"right\" delay={{ show: 250, hide: 400 }} overlay={renderBasicTooltip}>\n                    <BsFillQuestionCircleFill variant=\"success\" />\n                    </OverlayTrigger>\n                    <a href=\"/advanced-commonroom\">\n                        <button className=\"btn btn-secondary\">ADVANCED</button>\n                    </a>\n                    <OverlayTrigger placement=\"right\" delay={{ show: 250, hide: 400 }} overlay={renderAdvancedTooltip}>\n                    <BsFillQuestionCircleFill variant=\"success\" />\n                    </OverlayTrigger>\n                </nav>\n            }\n        } \n\n        else {\n            divHeader = \n            <nav className=\"centered-layout\">\n                <h2 className=\"title\">EXPOSURE CALCULATION</h2>\n                <p className=\"desc\">\n                    What kind of Location?\n                </p>\n            </nav>\n            divBody = \n            <nav>\n                <button id=\"classroom-button\" className=\"btn btn-secondary\" onClick={this.setClassroomSelected}><b>CLASSROOM</b></button>\n                {/* <button id=\"dining-button\" className=\"btn btn-secondary\" onClick={this.setDiningSelected}><b>DINING AREA</b></button> */}\n                {/* <button id=\"commonroom-button\" className=\"btn btn-secondary\" onClick={this.setCommonRoomSelected}><b>COMMON ROOM</b></button>  */}\n            </nav>\n        }\n    return(\n        <nav className=\"centered-layout\">\n            <div>\n              {divHeader}\n              {divBody}\n            </div>\n        </nav>\n        )\n    }\n} ","import React, { useState, useEffect } from 'react';\nimport './Results.css';\nimport GaugeChart from 'react-gauge-chart'\n\nconst chartStyle = {\n    // height: 250\n}\n\nfunction Results(){\n    const [loading, setLoading] = useState(true);\n    const [percentFaculty, setPercentFaculty] = useState(0.68);\n    const [percentStudent, setPercentStudent] = useState(0.83);\n    const [probFaculty5, setProbFaculty5] = useState(0.01);\n    const [probFaculty25, setProbFaculty25] = useState(0.06);\n    const [probFaculty50, setProbFaculty50] = useState(0.18);\n    const [probFaculty75, setProbFaculty75] = useState(0.54);\n    const [probFaculty95, setProbFaculty95] = useState(2.81);\n    const [probStudent5, setProbStudent5] = useState(0.04);\n    const [probStudent25, setProbStudent25] = useState(0.14);\n    const [probStudent50, setProbStudent50] = useState(0.34);\n    const [probStudent75, setProbStudent75] = useState(0.82);\n    const [probStudent95, setProbStudent95] = useState(3.17);\n    const [facultyInfectiousLow, setFacultyInfectiousLow] = useState(.7);\n    const [facultyInfectiousHigh, setFacultyInfectiousHigh] = useState(1.4);\n    const [studentInfectiousLow, setStudentInfectiousLow] = useState(.7);\n    const [studentInfectiousHigh, setStudentInfectiousHigh] = useState(1.4);\n\n    const parseValue = (value) => {\n        return parseFloat(value).toFixed(2);\n    }\n    \n    const getScaleValue = (value) => {\n        var scaleValue = 0\n        if (value <= .01) {\n            scaleValue = (value / 0.01) * 0.33\n        }\n        if (value > .01 & value <= 0.1) {\n            scaleValue = (((value / 0.1) * 0.33) + 0.33)\n        }\n        if (value > 0.1) {\n            scaleValue = ((value * 0.33) + 0.66)\n        }\n        return scaleValue\n    }\n\n    useEffect(() => {\n        const loadData = async () => {\n            const response = await fetch('/api/classroombasic', {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n            var result = await response.json();\n            // console.log(result);\n\n            setPercentFaculty(parseValue(result.percentFaculty));\n            setPercentStudent(parseValue(result.percentStudent));\n            setProbFaculty5(parseValue(result.probFaculty5));\n            setProbFaculty25(parseValue(result.probFaculty25));\n            setProbFaculty50(parseValue(result.probFaculty50));\n            setProbFaculty75(parseValue(result.probFaculty75));\n            setProbFaculty95(parseValue(result.probFaculty95));\n            setProbStudent5(parseValue(result.probStudent5));\n            setProbStudent25(parseValue(result.probStudent25));\n            setProbStudent50(parseValue(result.probStudent50));\n            setProbStudent75(parseValue(result.probStudent75));\n            setProbStudent95(parseValue(result.probStudent95));\n            setFacultyInfectiousLow(parseFloat(result.facultyInfectious[0]).toFixed(4));\n            setFacultyInfectiousHigh(parseFloat(result.facultyInfectious[1]).toFixed(4));\n            setStudentInfectiousLow(parseFloat(result.studentInfectious[0]).toFixed(4));\n            setStudentInfectiousHigh(parseFloat(result.studentInfectious[1]).toFixed(4));\n\n            setLoading(false);\n        };\n        loadData();\n    }, []);\n\n    if (loading) {\n        return(\n            <div>LOADING...</div>\n        )\n    }\n    else {\n        return(\n            <nav>\n            <nav className=\"results\">\n                <div className=\"info-container\">\n                    <div className=\"infobar\">\n                        <h1 className=\"best-estimate\">{percentFaculty}%</h1>\n                        <div className=\"infobox\">\n                            <h1 className=\"info-title\">FACULTY</h1>\n                            <p className=\"info-p\">The faculty infectious rate in the specified community is {facultyInfectiousLow}% and {facultyInfectiousHigh}%</p>\n                            <p className=\"info-p\"><strong>However,</strong> this does <strong>NOT</strong> mean infection is impossible. Please continue to adhere to COVID-19 precaution guidelines.</p>\n                        </div>\n                    </div>\n                    <div className=\"breakdown\">\n                        <h1 className=\"breakdown-title\">STATISTICAL BREAKDOWN</h1>\n                        <div className=\"breakdown-gauge\">\n                            <GaugeChart id=\"gauge-chart1\"\n                            nrOfLevels={20} \n                            percent={getScaleValue(percentFaculty * 0.01)} \n                            style={chartStyle}\n                            // arcsLength={[0.01, 0.1, 0.21]}\n                            textColor=\"000000\"\n                            hideText=\"true\"\n                            />\n                        </div>\n                        <p>While our best estimate for the infection probability is <strong className=\"estimate-text\">{percentFaculty}%,</strong> please note that this is still an approximation. However...</p>\n                        <p className=\"confidence-p\">We are <strong>95%</strong> confident that the infection probability is at least less than <strong className=\"orange-text\">{probFaculty95}%</strong></p>\n                        <p className=\"confidence-p\"><strong>75%</strong> confident: less than <strong className=\"orange-text\">{probFaculty75}%</strong></p>\n                        <p className=\"confidence-p\"><strong>50%</strong> confident: less than <strong className=\"orange-text\">{probFaculty50}%</strong></p>\n                        <p className=\"confidence-p\"><strong>25%</strong> confident: less than <strong className=\"orange-text\">{probFaculty25}%</strong></p>\n                        <p className=\"confidence-p\"><strong> 5%</strong> confident: less than <strong className=\"orange-text\">{probFaculty5}%</strong></p>\n                        <br></br>\n                    </div>\n                </div>\n\n                <div className=\"info-container\">\n                    <div className=\"infobar\">\n                        <h1 className=\"best-estimate\">{percentStudent}%</h1>\n                        <div className=\"infobox\">\n                            <h1 className=\"info-title\">STUDENTS</h1>\n                            <p className=\"info-p\">The student infectious rate in the specified community is between {studentInfectiousLow}% and {studentInfectiousHigh}%</p>\n                            <p className=\"info-p\"><strong>However,</strong> this does <strong>NOT</strong> mean infection is impossible. Please continue to adhere to COVID-19 precaution guidelines.</p>\n                        </div>\n                    </div>\n                    <div className=\"breakdown\">\n                        <h1 className=\"breakdown-title\">STATISTICAL BREAKDOWN</h1>\n                        <div className=\"breakdown-gauge\">\n                            <GaugeChart id=\"gauge-chart2\"\n                            nrOfLevels={20} \n                            percent={getScaleValue(percentStudent * 0.01)} \n                            style={chartStyle}\n                            // arcsLength={[0.01, 0.1, 0.21]}\n                            textColor=\"000000\"\n                            hideText=\"true\"\n                            />\n                        </div>\n                        <p>While our best estimate for the infection probability is <strong className=\"estimate-text\">{percentStudent}%,</strong> please note that this is still an approximation. However...</p>\n                        <p className=\"confidence-p\">We are <strong>95%</strong> confident that the infection probability is at least less than <strong className=\"orange-text\">{probStudent95}%</strong></p>\n                        <p className=\"confidence-p\"><strong>75%</strong> confident: less than <strong className=\"orange-text\">{probStudent75}%</strong></p>\n                        <p className=\"confidence-p\"><strong>50%</strong> confident: less than <strong className=\"orange-text\">{probStudent50}%</strong></p>\n                        <p className=\"confidence-p\"><strong>25%</strong> confident: less than <strong className=\"orange-text\">{probStudent25}%</strong></p>\n                        <p className=\"confidence-p\"><strong> 5%</strong> confident: less than <strong className=\"orange-text\">{probStudent5}%</strong></p>\n                        <br></br>\n                    </div>\n                </div>\n                {/* <a className='button-holder' id='link' href=\"/calculate-home\">\n                    <button className=\"btn btn-primary\"><strong>Update Calculation</strong></button>\n                </a> */}\n            </nav>\n            <a className='button-holder' id='link' href=\"/calculate-home\">\n            <button className=\"btn btn-primary\"><strong>Update Calculation</strong></button>\n        </a>\n        </nav>\n        )\n    }\n}\n\nexport default Results;","import React from 'react';\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Home from './components/Home';\nimport { Header } from './components/Header';\nimport About from './components/About';\nimport BasicClassroom from './components/BasicClassroom';\nimport AdvancedClassroom from './components/AdvancedClassroom';\nimport BasicDining from './components/BasicDining';\nimport AdvancedDining from './components/AdvancedDining';\nimport BasicCommonroom from './components/BasicCommonroom';\nimport AdvancedCommonroom from './components/AdvancedCommonroom';\nimport CalculateHome from './components/CalculateHome';\nimport Results from './components/Results';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/basic-classroom\" component={BasicClassroom} />\n          <Route path=\"/advanced-classroom\" component={AdvancedClassroom} />\n          <Route path=\"/basic-dining\" component={BasicDining} />\n          <Route path=\"/advanced-dining\" component={AdvancedDining} />\n          <Route path=\"/basic-commonroom\" component={BasicCommonroom} />\n          <Route path=\"/advanced-commonroom\" component={AdvancedCommonroom} />\n          <Route path=\"/calculate-home\" component={CalculateHome} />\n          <Route path=\"/results\" component={Results} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}